pipeline {
    agent any

    stages {
        stage('Acionar DAG no Airflow') {
            steps {
                withCredentials([
                    string(credentialsId: 'airflow-static-token', variable: 'AIRFLOW_TOKEN')
                ]) {
                    script {
                        // Gera a logical_date no formato ISO UTC
                        def logicalDate = java.time.ZonedDateTime
                            .now(java.time.ZoneOffset.UTC)
                            .withNano(0)
                            .toString()

                        def payload = groovy.json.JsonOutput.toJson([
                            conf: [:],
                            logical_date: logicalDate
                        ])

                        def response = httpRequest(
                            httpMode: 'POST',
                            url: 'http://localhost:9090/api/v2/dags/pipeline_ibge/dagRuns',
                            customHeaders: [[name: 'Authorization', value: "Bearer ${AIRFLOW_TOKEN}"]],
                            contentType: 'APPLICATION_JSON',
                            requestBody: payload,
                            validResponseCodes: '100:599'
                        )

                        echo "DAG acionada com status: ${response.status}"
                        echo "Resposta do servidor: ${response.content}"
                    }
                }
            }
        }
    }
}
